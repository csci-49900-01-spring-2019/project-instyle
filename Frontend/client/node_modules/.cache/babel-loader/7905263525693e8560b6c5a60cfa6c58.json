{"ast":null,"code":"import _regeneratorRuntime from \"/Users/supermattmatt/project-instyle/Frontend/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/supermattmatt/project-instyle/Frontend/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/supermattmatt/project-instyle/Frontend/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/supermattmatt/project-instyle/Frontend/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/supermattmatt/project-instyle/Frontend/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/supermattmatt/project-instyle/Frontend/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/supermattmatt/project-instyle/Frontend/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/supermattmatt/project-instyle/Frontend/client/src/App.js\";\n//Frontend/client/src/App.js\nimport React, { Component } from \"react\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: null\n    };\n    _this.callBackendAPI =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/backend');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Call our fetch function below once the component mounts\n      this.callBackendAPI().then(function (res) {\n        return _this2.setState({\n          data: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Connecting to the Express Server\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.state.data));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/supermattmatt/project-instyle/Frontend/client/src/App.js"],"names":["React","Component","App","state","data","callBackendAPI","fetch","response","json","body","status","Error","message","then","res","setState","express","catch","err","console","log"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,G;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,IAAI,EAAE;AADF,K;UAWRC,c;;;;6BAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACUC,KAAK,CAAC,UAAD,CADf;;AAAA;AACPC,cAAAA,QADO;AAAA;AAAA,qBAEMA,QAAQ,CAACC,IAAT,EAFN;;AAAA;AAEPC,cAAAA,IAFO;;AAAA,oBAIRF,QAAQ,CAACG,MAAT,KAAoB,GAJZ;AAAA;AAAA;AAAA;;AAAA,oBAKFC,KAAK,CAACF,IAAI,CAACG,OAAN,CALH;;AAAA;AAAA,+CAONH,IAPM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;wCAPG;AAAA;;AAChB;AACA,WAAKJ,cAAL,GACKQ,IADL,CACU,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAEX,UAAAA,IAAI,EAAEU,GAAG,CAACE;AAAZ,SAAd,CAAJ;AAAA,OADb,EAEKC,KAFL,CAEW,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAFd;AAGH,K,CACD;;;;6BAUS;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKf,KAAL,CAAWC,IAAf,CAFJ,CADJ;AAMH;;;;EA5BaH,S;;AA+BlB,eAAeC,GAAf","sourcesContent":["//Frontend/client/src/App.js\nimport React, { Component } from \"react\";\n\nclass App extends Component {\n    state = {\n        data: null\n    };\n\n    componentDidMount() {\n        // Call our fetch function below once the component mounts\n        this.callBackendAPI()\n            .then(res => this.setState({ data: res.express }))\n            .catch(err => console.log(err));\n    }\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    callBackendAPI = async () => {\n        const response = await fetch('/backend');\n        const body = await response.json();\n\n         if (response.status !== 200) {\n             throw Error(body.message)\n         }\n        return body;\n    };\n    render() {\n        return (\n            <div>\n                <p>Connecting to the Express Server</p>\n                <p>{this.state.data}</p>\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}